/*===============================================
	[SASS DIRECTORY ]
	
    [1] Minxin Link
    [2] Minxin Buton
    [3] Minxin Triangle
   
==============================================*/

@import 'bourbon/bourbon';

//===== Minxin Link =======

.no-margin{margin: 0 !important;}
@mixin link(){
	color: $linkColor;text-decoration: none;
	&:hover{color: lighten($linkColor, 10%);}
}
@mixin linkGrayDark(){
	color: $gray-dark;
	&:hover{color: $linkColor;}
}

@mixin linkGray(){
	color: #444 ;
	&:hover{color: $linkColor;}
}
@mixin linkGraylighter(){
	color: #999 ;
	&:hover{color: $linkColor;}
}

@mixin linkColor($color1,$color2){
	color: $color1;text-decoration: none;
	&:hover{color: $color2;}
}

//====== Minxin Buton =======
@mixin buttonGray(){
	padding: 7px 12px; background: $gray;color: #fff;   border-radius: 0; border-color: $gray;
	&:hover{background: $background1; border-color: $linkColor;color: #fff; }
}

@mixin buttonColor(){
	@include buttonGray();
	background: $background; border-color: $background;
	&:hover{background: $gray;border-color: $gray;}
}


@mixin clearfix() {
  &:before,
  &:after {
    content: " "; // 1
    display: table; // 2
  }
  &:after {
    clear: both;
  }
}


//====== Minxin Triangle  =======
// Size helper mixin
// ---
// @param [number] $width: width
// @param [number] $height ($width): height
// ---

@mixin size($width, $height: $width) {
  width: $width;
  height: $height;
}

// [Private] 
// Position helper mixin
// Article about it: http://hugogiraudel.com/2013/08/05/offsets-sass-mixin/
// ---
// @param [string] $position: position type
// @param [list] $args: list of offsets and values
// ---
@mixin _position($position, $args) {
  @each $o in top right bottom left {
    $i: index($args, $o);
    @if $i{
		@if $i + 1 <= length($args){
			@if type-of( nth($args, $i + 1) )== number {
				#{$o}: nth($args, $i + 1);
			}
			
		 }
      
    }
  }
  position: $position;
}

// Absolute positioning helper mixin
// Article about it: http://hugogiraudel.com/2013/08/05/offsets-sass-mixin/
// ---
// @param [list] $args: list of offsets and values
// ---
@mixin absolute($args) {
  @include _position(absolute, $args);
}

@mixin triangle($direction, $position, $color: currentColor, $size: 1em) {
  // Make sure the direction is valid
  @if not index(top right bottom left, $direction) {
    @warn "Direction must be one of top, right, bottom or left.";
  }

  @else {
    @include absolute($position); // Position
    @include size(0); // Size
    content: '';
    z-index: 2;

    border-#{$direction}: $size * 1 solid $color;
    $perpendicular-borders: $size solid transparent;
    
    @if $direction == top or $direction == bottom {
      border-left:   $perpendicular-borders;
      border-right:  $perpendicular-borders;
    }

    @else if $direction == right or $direction == left {
      border-bottom: $perpendicular-borders;
      border-top:    $perpendicular-borders;
    }
  }
}

//====== Minxin Buton Social =======
@mixin icons-social($name,$color,$textColor,$type){
	
	@if($type != circled ){
		&.fa-#{$name}{color:$color}
	}@else{
		.icon-circled {
			display: inline-block;
			width: 40px;
			height: 40px;
			border-radius: 50%;
			line-height: 40px;
			border: 1px solid $background;
			color:$background;
			vertical-align: top;
			text-align: center;
		}
		.icon-color.fa-#{$name}{
			background:$color;border-color: $color; color: $textColor;
		}
	}
	
	a:hover{
		
		@if($type != circled ){
			&.fa-#{$name}{color:$color}
		}@else{
			.icon-circled{background:$background;color:$textColor;}
			.icon-color.fa-#{$name}{
				background:lighten($color,10%);
			}
		}
			
	}
}

//====== Minxin Buton Social =======
.marginbottom__3x{margin-bottom: 30px;}

//====== Minxin owl controls =======
@mixin owl-controls($background,$type){
	.owl2-nav .owl2-prev,
	.owl2-nav .owl2-next{
		width: 20px;height: 27px; border: 1px solid #ddd;background-image: url('#{$base-url-theme}icons/ico-slider.png'); background-repeat: no-repeat;
		background-color: #fff; display: inline-block; text-indent: -999em; position: absolute;  transition: all 0.2s ease-in-out 0s; top:calc(50% - 13px);
		&:hover{background-color: $background; background-position: 0px 0; border-color: $linkColor;}
	}
	.owl2-nav .owl2-prev{
		background-position: -31px 0;
		&:hover{background-position: 0px 0;}
	}		
	.owl2-nav .owl2-next{
		background-position: -60px 0;
		&:hover{ background-position: -90px 0;}
	}

	@if($type == default ){
		.owl2-nav .owl2-prev{
			@include if-ltr {#{left}: 0px;}
			@include if-rtl { #{left}: 0px;}
		}		
		.owl2-nav .owl2-next{
			@include if-ltr {#{right}: 0px;}
			@include if-rtl { #{right}: 0px;}
		}
		
	}@else if($type == listing_tabs ){
		.owl2-nav .owl2-prev{
			@include if-ltr {#{$right}: 25px; #{$left}: auto;}
			@include if-rtl { #{$right}: 0px;#{$left}: auto;}
		}		
		.owl2-nav .owl2-next{
			@include if-ltr {#{$right}: 0px;}
			@include if-rtl { #{$right}: 25px;}
		}

		
	}
	
}

//====== Minxin Loader Logo =======

@-webkit-keyframes animLoadedLogo {
  to {
    -webkit-transform: translate3d(0,100%,0) translate3d(0,50px,0) scale3d(0.65,0.65,1);
  }
}
@keyframes animLoadedLogo {
  to {
    -webkit-transform: translate3d(0,100%,0) translate3d(0,50px,0) scale3d(0.65,0.65,1);
    transform: translate3d(0,100%,0) translate3d(0,50px,0) scale3d(0.65,0.65,1);
  }
}

@-webkit-keyframes animLoadedLoader {
  to {
    opacity: 0;
    -webkit-transform: translate3d(0,-100%,0) scale3d(0.3,0.3,1);
  }
}
@keyframes animLoadedLoader {
  to {
    opacity: 0;
    -webkit-transform: translate3d(0,-100%,0) scale3d(0.3,0.3,1);
    transform: translate3d(0,-100%,0) scale3d(0.3,0.3,1);
  }
}

@-webkit-keyframes animLoadedHeader {
  to {
    -webkit-transform: translate3d(0,-100%,0);
  }
}
@keyframes animLoadedHeader {
  to {
    -webkit-transform: translate3d(0,-100%,0);
    transform: translate3d(0,-100%,0);
  }
}
@-webkit-keyframes animInitialHeader {
  from {
    opacity: 0;
    -webkit-transform: translate3d(0,800px,0);
  }
}
@keyframes animInitialHeader {
  from {
    opacity: 0;
    -webkit-transform: translate3d(0,800px,0);
    transform: translate3d(0,800px,0);
  }
}